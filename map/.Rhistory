load("map_cleaning.rda")
save(eda_counts, file = "eda_counts.rda")
library(shiny)
library(tidyverse)
library(dplyr)
library(janitor)
library(lubridate)
library(gtExtras)
library(sf)
library(tidycensus)
library(mapview)
library(leaflet)
library(sp)
load("map_cleaning.rda")
eda_counts <- mcmf_sp %>%
group_by(community, category_name) %>%
summarise(n = n()) %>%
mutate(category_name = str_replace_all(category_name, '\\.', '')) %>%
mutate(general_category = case_when(
category_name %in% c("Music & Art", "Performance", "Sports + Wellness", "Nature", "Food") ~ "Leisure & Arts",
category_name %in% c("Academic Support", "Math", "Reading & Writing", "Science", "Science & Math","Social Studies", "Teaching") ~ "Academics",
category_name %in% c("Building & Fixing Things", "Computers", "Digital Media", "Managing Money", "Law", "Work + Career") ~ "Professional Skill Building",
category_name %in% c("Helping Your Community", "Transportation", "Customer/Human Service", "Healthcare") ~ "Community Service"))
gencat_count <- eda_counts %>%
group_by(community, general_category) %>%
summarize(n = sum(n))
save(gencat_count, file = "gencat_count.rda")
save(eda_counts, file = "eda_counts.rda")
?fmt_percent()
runApp()
load("map_cleaning.rda")
load("eda_counts.rda")
load("gencat_counts.rda")
load("map_cleaning.rda")
load("eda_counts.rda")
load("gencat_counts.rda")
library(shiny)
library(tidyverse)
library(dplyr)
library(janitor)
library(lubridate)
library(gtExtras)
library(sf)
library(tidycensus)
library(mapview)
library(leaflet)
library(sp)
load("map_cleaning.rda")
eda_counts <- mcmf_sp %>%
group_by(community, category_name) %>%
summarise(n = n()) %>%
mutate(category_name = str_replace_all(category_name, '\\.', '')) %>%
mutate(general_category = case_when(
category_name %in% c("Music & Art", "Performance", "Sports + Wellness", "Nature", "Food") ~ "Leisure & Arts",
category_name %in% c("Academic Support", "Math", "Reading & Writing", "Science", "Science & Math","Social Studies", "Teaching") ~ "Academics",
category_name %in% c("Building & Fixing Things", "Computers", "Digital Media", "Managing Money", "Law", "Work + Career") ~ "Professional Skill Building",
category_name %in% c("Helping Your Community", "Transportation", "Customer/Human Service", "Healthcare") ~ "Community Service"))
gencat_count <- eda_counts %>%
group_by(community, general_category) %>%
summarize(n = sum(n))
save(eda_counts, gencat_count, map, file = "map_counts.rda")
# My Chi My Future Shiny Application ---------------------------------------
# load packages that will be used for the application
library(shiny)
library(tidyverse)
library(dplyr)
library(janitor)
library(lubridate)
library(gtExtras)
library(sf)
library(tidycensus)
library(mapview)
library(leaflet)
library(sp)
# load in data ------------------------------------------------------------------
load("map_cleaning.rda")
load("map_counts.rda")
View(eda_counts)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
library(shiny)
library(tidyverse)
library(dplyr)
library(janitor)
library(lubridate)
library(gtExtras)
library(sf)
library(tidycensus)
library(mapview)
library(leaflet)
library(sp)
# load in data ------------------------------------------------------------------
load("map_cleaning.rda")
load("map_counts.rda")
View(mcmf_sp)
View(map)
View(mcmf_map2)
data <- read_tsv("convert_MCMF_ALL_TIME_DATA.csv", show_col_types = FALSE) %>%
clean_names() %>%
# removing irrelevant columns
select(-c("index_row", "logo_url", "online_address", "program_url",
"registration_url","contact_name", "contact_email",
"contact_phone")) %>%
# renaming duplicate category names
mutate(category_name = str_replace(category_name, '&', 'And'),
category_name = str_replace_all(category_name, '\\.', '')) %>%
# removing programs with min_age over 25
filter(min_age < 25)
View(data)
View(mcmf_sp)
library(shiny)
library(tidyverse)
library(dplyr)
library(janitor)
library(lubridate)
library(gtExtras)
library(sf)
library(tidycensus)
library(mapview)
library(leaflet)
library(sp)
load("map_cleaning.rda")
food <- merge(mcmf_sf, data[, c("program_provides_free_food")], by = "id", all.x = TRUE)
food <- merge(mcmf_sp, data[, c("program_provides_free_food")], by = "id", all.x = TRUE)
View(data %>% filter(id == "77333"))
food <- merge(mcmf_sp, data[, c("id","program_provides_free_food")], by = "id", all.x = TRUE)
View(food)
food <- merge(mcmf_sp, data[, c("id","program_provides_free_food")], by = "id", all.x = TRUE)
View(food)
View(eda_counts)
View(gencat_count)
View(gencat_count)
percents <- gencat_count %>%
group_by(community)
View(percents)
percents <- gencat_count %>%
group_by(community) %>%
summarize(total_n = sum(n))
View(percents)
sum(total_n)
sum(percents["total_n"])
sum(percents$total_n)
percents <- gencat_count %>%
group_by(community) %>%
summarize(total_n = sum(n)) %>%
mutate(perc = (total_n / sum(total_n)) * 100)
sum(gencat_count$n)
gencat_count <- eda_counts %>%
group_by(community, general_category) %>%
summarize(n = sum(n)) %>%
mutate(perc = (n / sum(n)) * 100)
View(gencat_count)
View(eda_counts)
gencat_count <- eda_counts %>%
group_by(community, general_category) %>%
summarize(n = sum(n)) %>%
mutate(perc = (n / sum(gencat_count$n)) * 100)
View(gencat_count)
runApp()
runApp()
runApp()
